@page "/galaxy"
@using StarConflictsRevolt.Clients.Blazor.Services
@using StarConflictsRevolt.Clients.Models
@inject IGameStateService GameState
@inject NavigationManager Navigation

<PageTitle>Galaxy View</PageTitle>

<div class="container-fluid h-100">
    <div class="row h-100">
        <!-- Sidebar -->
        <div data-testid="game-sidebar" class="col-md-3 bg-dark text-light p-3">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h5 data-testid="game-controls-header">Game Controls</h5>
                <button data-testid="home-btn" class="btn btn-outline-light btn-sm" @onclick="NavigateToHome">
                    <i class="fas fa-home"></i>
                </button>
            </div>
            
            @if (GameState.CurrentSession != null)
            {
                <div class="card bg-secondary mb-3">
                    <div class="card-body">
                        <h6 class="card-title">@GameState.CurrentSession.SessionName</h6>
                        <p class="card-text small">
                            Type: @GameState.CurrentSession.SessionType<br/>
                            Status: @(GameState.CurrentSession.IsActive ? "Active" : "Waiting")
                        </p>
                    </div>
                </div>
            }
            
            <div class="mb-3">
                <h6 data-testid="fleet-management-header">Fleet Management</h6>
                <div class="list-group list-group-flush">
                    @if (GameState.CurrentWorld?.Galaxy.StarSystems != null)
                    {
                        @foreach (var starSystemDto in GameState.CurrentWorld.Galaxy.StarSystems.Take(5))
                        {
                            <div class="list-group-item bg-dark border-secondary">
                                <div class="d-flex justify-content-between">
                                    <span>@starSystemDto.Name</span>
                                    <span class="badge bg-info">@starSystemDto.Id</span>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-muted small">No planets loaded</div>
                    }
                </div>
            </div>
            
            <div class="mb-3">
                <h6 data-testid="quick-actions-header">Quick Actions</h6>
                <div data-testid="quick-actions" class="d-grid gap-2">
                    <button data-testid="fleet-manager-btn" class="btn btn-outline-primary btn-sm" @onclick="ShowFleetManager">
                        <i class="fas fa-ship"></i> Fleet Manager
                    </button>
                    <button data-testid="planet-manager-btn" class="btn btn-outline-success btn-sm" @onclick="ShowPlanetManager">
                        <i class="fas fa-globe"></i> Planet Manager
                    </button>
                    <button data-testid="diplomacy-btn" class="btn btn-outline-warning btn-sm" @onclick="ShowDiplomacy">
                        <i class="fas fa-handshake"></i> Diplomacy
                    </button>
                </div>
            </div>
        </div>
        
        <!-- Main Galaxy View -->
        <div class="col-md-9 p-0">
            <div data-testid="galaxy-container" class="galaxy-container position-relative" style="height: 100vh; background: linear-gradient(45deg, #0a0a0a, #1a1a2e);">
                <!-- Galaxy Map -->
                <div class="galaxy-map position-absolute w-100 h-100">
                    @if (GameState.CurrentWorld?.Galaxy?.StarSystems != null)
                    {
                        @foreach (var starSystem in GameState.CurrentWorld.Galaxy.StarSystems)
                        {
                            <div class="planet position-absolute" 
                                 style="left: @(GetRandomPosition().x)%; top: @(GetRandomPosition().y)%;"
                                 @onclick="() => SelectStarSystem(starSystem)">
                                <div class="planet-icon @GetStarSystemClass(starSystem)">
                                    <i class="fas fa-circle"></i>
                                </div>
                                <div class="planet-name">@starSystem.Name</div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="position-absolute top-50 start-50 translate-middle text-center text-light">
                            <i class="fas fa-spinner fa-spin fa-2x mb-3"></i>
                            <p>Loading galaxy...</p>
                        </div>
                    }
                </div>
                
                <!-- Selected Star System Info -->
                @if (selectedStarSystem != null)
                {
                    <div class="planet-info position-absolute top-0 end-0 m-3" style="max-width: 300px;">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="mb-0">@selectedStarSystem.Name</h6>
                            </div>
                            <div class="card-body">
                                <p class="small mb-2">
                                    <strong>Name:</strong> @selectedStarSystem.Name<br/>
                                    <strong>Planets:</strong> @selectedStarSystem.Planets.Count()<br/>
                                    <strong>Coordinates:</strong> @selectedStarSystem.Coordinates
                                </p>
                                <div class="d-grid gap-1">
                                    <button class="btn btn-primary btn-sm" @onclick="() => ShowStarSystemDetails(selectedStarSystem)">
                                        <i class="fas fa-info-circle"></i> <text>Details</text>
                                    </button>
                                    <button class="btn btn-success btn-sm" @onclick="() => ShowFleetActions(selectedStarSystem)">
                                        <i class="fas fa-ship"></i> <text>Fleet Actions</text>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private StarSystemDto? selectedStarSystem;

    protected override void OnInitialized()
    {
        GameState.StateChanged += StateHasChanged;
    }

    private void SelectStarSystem(StarSystemDto starSystem)
    {
        selectedStarSystem = starSystem;
    }

    private string GetStarSystemClass(StarSystemDto starSystem)
    {
        // TODO: Add loyalty property to StarSystemDto
        return "planet-neutral";
    }

    private void ShowFleetManager()
    {
        // TODO: Implement fleet manager modal
    }

    private void ShowPlanetManager()
    {
        // TODO: Implement planet manager modal
    }

    private void ShowDiplomacy()
    {
        // TODO: Implement diplomacy modal
    }

    private void ShowStarSystemDetails(StarSystemDto starSystem)
    {
        // TODO: Implement star system details modal
    }

    private void ShowFleetActions(StarSystemDto starSystem)
    {
        // TODO: Implement fleet actions modal
    }

    private void NavigateToHome()
    {
        Navigation.NavigateTo("/");
    }

    private (int x, int y) GetRandomPosition()
    {
        var random = new Random();
        return (random.Next(10, 90), random.Next(10, 90));
    }
}

<style>
    .galaxy-container {
        overflow: hidden;
    }
    
    .planet {
        cursor: pointer;
        transition: transform 0.2s;
    }
    
    .planet:hover {
        transform: scale(1.2);
    }
    
    .planet-icon {
        font-size: 1.5rem;
        text-align: center;
    }
    
    .planet-name {
        font-size: 0.8rem;
        text-align: center;
        color: white;
        text-shadow: 1px 1px 2px rgba(0,0,0,0.8);
    }
    
    .planet-rebellion {
        color: #007bff;
    }
    
    .planet-empire {
        color: #dc3545;
    }
    
    .planet-neutral {
        color: #6c757d;
    }
    
    .planet-unknown {
        color: #ffc107;
    }
</style>
